'''
Bringing it all together: Predict win percentage
A pandas DataFrame (baseball_df) has been loaded into your session. For convenience, a dictionary describing each column within baseball_df has been printed into your console. You can reference these descriptions throughout the exercise.

You'd like to attempt to predict a team's win percentage for a given season by using the team's total runs scored in a season ('RS') and total runs allowed in a season ('RA') with the following function:

def predict_win_perc(RS, RA):
    prediction = RS ** 2 / (RS ** 2 + RA ** 2)
    return np.round(prediction, 2)
Let's compare the approaches you've learned to calculate a predicted win percentage for each season (or row) in your DataFrame.

Instructions 1/4
25 XP
Use a for loop and .itertuples() to predict the win percentage for each row of baseball_df with the predict_win_perc() function. Save each row's predicted win percentage as win_perc_pred and append each to the win_perc_preds_loop list.
'''


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

rangers_df=pd.DataFrame({'Team':[
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX'],
                         'League':['AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
],
                         'Year':['2012',
'2011',
'2010',
'2009',
'2008',
'2007',
'2006',
'2005',
'2004',
'2003',
'2002',
'2001',
'2000',
'1999',
'1998',
'1997',
'1996',
'1993',
'1992',
'1991',
'1990',
'1989',
'1988',
'1987',
'1986',
'1985',
'1984',
'1983',
'1982',
'1980',
'1979',
'1978',
'1977',
'1976',
'1975',
'1974',
'1973',
],
                         'RS':['808',
'855',
'787',
'784',
'901',
'816',
'835',
'865',
'860',
'826',
'843',
'890',
'848',
'945',
'940',
'807',
'928',
'835',
'682',
'829',
'676',
'695',
'637',
'823',
'771',
'617',
'656',
'639',
'590',
'756',
'750',
'692',
'767',
'616',
'714',
'690',
'619',
],
                         'RA':['707',
'677',
'687',
'740',
'967',
'844',
'784',
'858',
'794',
'969',
'882',
'968',
'974',
'859',
'871',
'823',
'799',
'751',
'753',
'814',
'696',
'714',
'735',
'849',
'743',
'785',
'714',
'609',
'749',
'752',
'698',
'632',
'657',
'652',
'733',
'698',
'844',
],
                         'W':['93',
'96',
'90',
'87',
'79',
'75',
'80',
'79',
'89',
'71',
'72',
'73',
'71',
'95',
'88',
'77',
'90',
'86',
'77',
'85',
'83',
'83',
'70',
'75',
'87',
'62',
'69',
'77',
'64',
'76',
'83',
'87',
'94',
'76',
'79',
'83',
'57',
],
                         'G':['162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'163',
'162',
'162',
'162',
'162',
'162',
'161',
'162',
'162',
'161',
'161',
'163',
'162',
'163',
'162',
'162',
'162',
'162',
'162',
'161',
'162',
],
                         'Playoffs':['1',
'1',
'1',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'1',
'1',
'0',
'1',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0'
]
                         })

rangers_int_df = rangers_df[['RS', 'RA', 'W', 'G', 'Playoffs']].apply(pd.to_numeric)
print(rangers_int_df.head())
rangers_int_df.describe()
rangers_int_df.info()

def predict_win_perc(RS, RA):
    prediction = RS ** 2 / (RS ** 2 + RA ** 2)
    return np.round(prediction, 2)

win_perc_preds_loop = []

# Use a loop and .itertuples() to collect each row's predicted win percentage
for row in rangers_int_df.itertuples():
    runs_scored = row.RS
    runs_allowed = row.RA
    win_perc_pred = predict_win_perc(runs_scored, runs_allowed)
    win_perc_preds_loop.append(win_perc_pred)

rangers_int_df['Win_Predict_loop'] = win_perc_preds_loop

print(rangers_int_df.head())
rangers_int_df.describe()
rangers_int_df.info()

# Apply predict_win_perc to each row of the DataFrame
win_perc_preds_apply = rangers_int_df.apply(lambda row: predict_win_perc(row['RS'], row['RA']), axis=1)


rangers_int_df['Win_Predict_apply'] = win_perc_preds_loop

print(rangers_int_df.head())
rangers_int_df.describe()
rangers_int_df.info()

# Calculate the win percentage predictions using NumPy arrays
win_perc_preds_np = predict_win_perc(rangers_int_df['RS'].values, rangers_int_df['RA'].values)
rangers_int_df['WP_preds'] = win_perc_preds_np
print(rangers_int_df.head())