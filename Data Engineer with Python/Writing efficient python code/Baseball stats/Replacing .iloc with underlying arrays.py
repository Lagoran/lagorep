'''
Replacing .iloc with underlying arrays
Now that you have a better grasp on a DataFrame's internals let's update one of your previous analyses to leverage a DataFrame's underlying arrays. You'll revisit the win percentage calculations you performed row by row with the .iloc method:

def calc_win_perc(wins, games_played):
    win_perc = wins / games_played
    return np.round(win_perc,2)

win_percs_list = []

for i in range(len(baseball_df)):
    row = baseball_df.iloc[i]

    wins = row['W']
    games_played = row['G']

    win_perc = calc_win_perc(wins, games_played)

    win_percs_list.append(win_perc)

baseball_df['WP'] = win_percs_list
Let's update this analysis to use arrays instead of the .iloc method. A DataFrame (baseball_df) has been loaded into your session.

Instructions 1/3
50 XP
Use the right method to collect the underlying 'W' and 'G' arrays of baseball_df and pass them directly into the calc_win_perc() function. Store the result as a variable called win_percs_np.

'''

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

rangers_df=pd.DataFrame({'Team':[
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX',
'TEX'],
                         'League':['AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
'AL',
],
                         'Year':['2012',
'2011',
'2010',
'2009',
'2008',
'2007',
'2006',
'2005',
'2004',
'2003',
'2002',
'2001',
'2000',
'1999',
'1998',
'1997',
'1996',
'1993',
'1992',
'1991',
'1990',
'1989',
'1988',
'1987',
'1986',
'1985',
'1984',
'1983',
'1982',
'1980',
'1979',
'1978',
'1977',
'1976',
'1975',
'1974',
'1973',
],
                         'RS':['808',
'855',
'787',
'784',
'901',
'816',
'835',
'865',
'860',
'826',
'843',
'890',
'848',
'945',
'940',
'807',
'928',
'835',
'682',
'829',
'676',
'695',
'637',
'823',
'771',
'617',
'656',
'639',
'590',
'756',
'750',
'692',
'767',
'616',
'714',
'690',
'619',
],
                         'RA':['707',
'677',
'687',
'740',
'967',
'844',
'784',
'858',
'794',
'969',
'882',
'968',
'974',
'859',
'871',
'823',
'799',
'751',
'753',
'814',
'696',
'714',
'735',
'849',
'743',
'785',
'714',
'609',
'749',
'752',
'698',
'632',
'657',
'652',
'733',
'698',
'844',
],
                         'W':['93',
'96',
'90',
'87',
'79',
'75',
'80',
'79',
'89',
'71',
'72',
'73',
'71',
'95',
'88',
'77',
'90',
'86',
'77',
'85',
'83',
'83',
'70',
'75',
'87',
'62',
'69',
'77',
'64',
'76',
'83',
'87',
'94',
'76',
'79',
'83',
'57',
],
                         'G':['162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'162',
'163',
'162',
'162',
'162',
'162',
'162',
'161',
'162',
'162',
'161',
'161',
'163',
'162',
'163',
'162',
'162',
'162',
'162',
'162',
'161',
'162',
],
                         'Playoffs':['1',
'1',
'1',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'1',
'1',
'0',
'1',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0',
'0'
]
                         })

rangers_int_df = rangers_df[['RS', 'RA', 'W', 'G', 'Playoffs']].apply(pd.to_numeric)
print(rangers_int_df.head())
rangers_int_df.describe()
rangers_int_df.info()

def calc_win_perc(wins, games_played):
    win_perc = wins / games_played
    return np.round(win_perc,2)

win_percs_list = []

for i in range(len(rangers_df)):
    row = rangers_df.iloc[i]

    wins = int(row['W'])
    games_played = int(row['G'])

    win_perc = calc_win_perc(wins, games_played)

    win_percs_list.append(win_perc)

rangers_int_df['WP'] = win_percs_list

print(rangers_int_df.head())
rangers_int_df.describe()
rangers_int_df.info()

# Use the W array and G array to calculate win percentages
win_percs_np = calc_win_perc(rangers_int_df['W'].array, rangers_int_df['G'].array)

# Append a new column to baseball_df that stores all win percentages
rangers_int_df['WP_array'] = win_percs_np

print(rangers_int_df.head())

